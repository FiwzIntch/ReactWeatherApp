{"version":3,"sources":["App.js","reportWebVitals.js","index.js","key.js"],"names":["api","key","keys","API_KEY","url","BASE_URL","today","dateFormat","Date","App","useState","country","setCountry","weather","setWeather","showWeather","e","a","getWeather","axios","get","then","response","data","status","useEffect","className","id","main","temp","type","placeholder","value","onChange","target","onKeyPress","name","Math","round","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sSAQMA,EAAM,CACVC,IAAKC,IAAKC,QACVC,IAAKF,IAAKG,UAGNC,EAAQC,YAAW,IAAIC,KAAQ,YA8DtBC,MA5Df,WACE,MAA8BC,mBAAS,YAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACJ,UAAVD,EAAEf,IADY,gCAEViB,IAFU,2CAAH,sDAMXA,EAAa,WACjBC,IACGC,IADH,UACUpB,EAAII,IADd,qBAC8BO,EAD9B,kBAC+CX,EAAIC,IADnD,kBAEGoB,MAAK,SAACC,GACL,IAAQC,EAAiBD,EAAjBC,KACO,MADUD,EAAXE,SAEZV,EAAWS,GACXX,EAAW,SASnB,OAJAa,qBAAU,WACRP,MACC,IAGD,sBACEQ,UACEb,EAAQc,GACJd,EAAQe,KAAKC,KAAO,EAClB,WACAhB,EAAQe,KAAKC,KAAO,GACpB,UACA,MACF,MARR,UAWE,qBAAKH,UAAU,mBAAf,SACE,uBACEI,KAAK,OACLJ,UAAU,aACVK,YAAY,YACZC,MAAOrB,EACPsB,SAAU,SAACjB,GAAD,OAAOJ,EAAWI,EAAEkB,OAAOF,QACrCG,WAAYpB,MAGfF,EAAQc,IACP,sBAAKD,UAAU,oBAAf,UACE,sBAAKA,UAAU,UAAf,cAA2Bb,EAAQuB,QACnC,qBAAKV,UAAU,OAAf,SAAuBpB,IACvB,sBAAKoB,UAAU,cAAf,cAA+BW,KAAKC,MAAMzB,EAAQe,KAAKC,MAAvD,YACA,qBAAKH,UAAU,cAAf,SAA8Bb,EAAQA,QAAQ,GAAG0B,qBCxD5CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,gBChBAa,EAAOC,QAAU,CACfnD,QAAS,mCACTE,SAAU,8C","file":"static/js/main.a3ce7592.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport dateFormat from \"dateformat\";\nimport keys from \"./key\";\nimport axios from \"axios\";\n\n//weather sample hot: kenya cold: russia\n\nconst api = {\n  key: keys.API_KEY,\n  url: keys.BASE_URL,\n};\n\nconst today = dateFormat(new Date(), \"fullDate\");\n\nfunction App() {\n  const [country, setCountry] = useState(\"Thailand\");\n  const [weather, setWeather] = useState({});\n\n  const showWeather = async (e) => {\n    if (e.key === \"Enter\") {\n      await getWeather();\n    }\n  };\n\n  const getWeather = () => {\n    axios\n      .get(`${api.url}weather?q=${country}&appid=${api.key}&units=metric`)\n      .then((response) => {\n        const { data, status } = response;\n        if (status === 200) {\n          setWeather(data);\n          setCountry(\"\");\n        }\n      });\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  return (\n    <div\n      className={\n        weather.id\n          ? weather.main.temp < 5\n            ? \"App cold\"\n            : weather.main.temp > 30\n            ? \"App hot\"\n            : \"App\"\n          : \"App\"\n      }\n    >\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"search...\"\n          value={country}\n          onChange={(e) => setCountry(e.target.value)}\n          onKeyPress={showWeather}\n        ></input>\n      </div>\n      {weather.id && (\n        <div className=\"content-container\">\n          <div className=\"country\"> {weather.name}</div>\n          <div className=\"date\">{today}</div>\n          <div className=\"temperature\"> {Math.round(weather.main.temp)}Â°C </div>\n          <div className=\"description\">{weather.weather[0].description}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n  API_KEY: \"0b769eaf90a6c0dceadcf8df5bac86af\",\r\n  BASE_URL: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n"],"sourceRoot":""}